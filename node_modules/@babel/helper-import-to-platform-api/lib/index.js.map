{"version":3,"names":["_core","require","_helperModuleImports","_platformsSupport","imp","path","name","module","addNamed","importedType","imr","s","template","expression","ast","imrWithFallback","t","cloneNode","importToPlatformApi","targets","transformers","toCommonJS","needsNodeSupport","needsWebSupport","nodeSupportsIMR","webSupportsIMR","nodeSupportsFsPromises","getSupport","supportIsomorphicCJS","commonJS","buildFetchAsync","buildFetchSync","p","web","w","node","n","nodeFSP","nF","webIMR","wI","nodeIMR","nI","toCJS","c","iC","readFileP","fs","arg","specifier","identifier","webFetch","callExpression","nodeFsAsync","nodeFsSync","Error","buildFetchAsyncWrapped","isStringLiteral","buildFetch","buildCodeFrameError","needsAwait","buildParallelStaticImports","data","length","declarators","rhs","fetch","awaitExpression","push","variableDeclarator","id","ids","map","fetches","arrayPattern","arrayExpression","variableDeclaration"],"sources":["../src/index.ts"],"sourcesContent":["import { types as t, template, type NodePath } from \"@babel/core\";\nimport type { Targets } from \"@babel/helper-compilation-targets\";\nimport { addNamed } from \"@babel/helper-module-imports\";\n\nimport getSupport from \"./platforms-support.ts\";\n\nfunction imp(path: NodePath, name: string, module: string) {\n  return addNamed(path, name, module, { importedType: \"es6\" });\n}\n\nexport interface Pieces {\n  commonJS?: (require: t.Expression, specifier: t.Expression) => t.Expression;\n  webFetch: (fetch: t.Expression) => t.Expression;\n  nodeFsSync: (read: t.Expression) => t.Expression;\n  nodeFsAsync: () => t.Expression;\n}\n\nexport interface Builders {\n  buildFetch: (specifier: t.Expression, path: NodePath) => t.Expression;\n  buildFetchAsync: (specifier: t.Expression, path: NodePath) => t.Expression;\n  needsAwait: boolean;\n}\n\nconst imr = (s: t.Expression) => template.expression.ast`\n  import.meta.resolve(${s})\n`;\nconst imrWithFallback = (s: t.Expression) => template.expression.ast`\n  import.meta.resolve?.(${s}) ?? new URL(${t.cloneNode(s)}, import.meta.url)\n`;\n\nexport function importToPlatformApi(\n  targets: Targets,\n  transformers: Pieces,\n  toCommonJS: boolean,\n) {\n  const {\n    needsNodeSupport,\n    needsWebSupport,\n    nodeSupportsIMR,\n    webSupportsIMR,\n    nodeSupportsFsPromises,\n  } = getSupport(targets);\n  const supportIsomorphicCJS = transformers.commonJS != null;\n\n  let buildFetchAsync: (\n    specifier: t.Expression,\n    path: NodePath,\n  ) => t.Expression;\n  let buildFetchSync: typeof buildFetchAsync;\n\n  // \"p\" stands for pattern matching :)\n  const p = ({\n    web: w = needsWebSupport,\n    node: n = needsNodeSupport,\n    nodeFSP: nF = nodeSupportsFsPromises,\n    webIMR: wI = webSupportsIMR,\n    nodeIMR: nI = nodeSupportsIMR,\n    toCJS: c = toCommonJS,\n    supportIsomorphicCJS: iC = supportIsomorphicCJS,\n  }: {\n    web?: boolean;\n    node?: boolean;\n    nodeFSP?: boolean;\n    webIMR?: boolean;\n    nodeIMR?: boolean;\n    toCJS?: boolean;\n    supportIsomorphicCJS?: boolean;\n  }) =>\n    +w +\n    (+n << 1) +\n    (+wI << 2) +\n    (+nI << 3) +\n    (+c << 4) +\n    (+nF << 5) +\n    (+iC << 6);\n\n  const readFileP = (fs: t.Expression, arg: t.Expression) => {\n    if (nodeSupportsFsPromises) {\n      return template.expression.ast`${fs}.promises.readFile(${arg})`;\n    }\n    return template.expression.ast`\n      new Promise(\n        (a =>\n          (r, j) => ${fs}.readFile(a, (e, d) => e ? j(e) : r(d))\n        )(${arg})\n      )`;\n  };\n\n  switch (\n    p({\n      web: needsWebSupport,\n      node: needsNodeSupport,\n      webIMR: webSupportsIMR,\n      nodeIMR: nodeSupportsIMR,\n      toCJS: toCommonJS,\n    })\n  ) {\n    case p({ toCJS: true, supportIsomorphicCJS: true }):\n      buildFetchSync = specifier =>\n        transformers.commonJS(t.identifier(\"require\"), specifier);\n      break;\n    case p({ web: true, node: true }):\n      buildFetchAsync = specifier => {\n        const web = transformers.webFetch(\n          t.callExpression(t.identifier(\"fetch\"), [\n            (webSupportsIMR ? imr : imrWithFallback)(t.cloneNode(specifier)),\n          ]),\n        );\n        const node = supportIsomorphicCJS\n          ? template.expression.ast`\n              import(\"module\").then(module => ${transformers.commonJS(\n                template.expression.ast`module.createRequire(import.meta.url)`,\n                specifier,\n              )})\n            `\n          : nodeSupportsIMR\n            ? template.expression.ast`\n                import(\"fs\").then(\n                  fs => ${readFileP(\n                    t.identifier(\"fs\"),\n                    template.expression.ast`new URL(${imr(specifier)})`,\n                  )}\n                ).then(${transformers.nodeFsAsync()})\n              `\n            : template.expression.ast`\n                Promise.all([import(\"fs\"), import(\"module\")])\n                  .then(([fs, module]) =>\n                    ${readFileP(\n                      t.identifier(\"fs\"),\n                      template.expression.ast`\n                        module.createRequire(import.meta.url).resolve(${specifier})\n                      `,\n                    )}\n                  )\n                  .then(${transformers.nodeFsAsync()})\n              `;\n\n        return template.expression.ast`\n            typeof process === \"object\" && process.versions?.node\n              ? ${node}\n              : ${web}\n          `;\n      };\n      break;\n    case p({ web: true, node: false, webIMR: true }):\n      buildFetchAsync = specifier =>\n        transformers.webFetch(\n          t.callExpression(t.identifier(\"fetch\"), [imr(specifier)]),\n        );\n      break;\n    case p({ web: true, node: false, webIMR: false }):\n      buildFetchAsync = specifier =>\n        transformers.webFetch(\n          t.callExpression(t.identifier(\"fetch\"), [imrWithFallback(specifier)]),\n        );\n      break;\n    case p({ web: false, node: true, toCJS: true }):\n      buildFetchSync = specifier =>\n        transformers.nodeFsSync(template.expression.ast`\n            require(\"fs\").readFileSync(require.resolve(${specifier}))\n          `);\n      buildFetchAsync = specifier => template.expression.ast`\n            require(\"fs\").promises.readFile(require.resolve(${specifier}))\n              .then(${transformers.nodeFsAsync()})\n          `;\n      break;\n    case p({\n      web: false,\n      node: true,\n      toCJS: false,\n      supportIsomorphicCJS: true,\n    }):\n      buildFetchSync = (specifier, path) =>\n        transformers.commonJS(\n          template.expression.ast`\n            ${imp(path, \"createRequire\", \"module\")}(import.meta.url)\n          `,\n          specifier,\n        );\n      break;\n    case p({ web: false, node: true, toCJS: false, nodeIMR: true }):\n      buildFetchSync = (specifier, path) =>\n        transformers.nodeFsSync(template.expression.ast`\n            ${imp(path, \"readFileSync\", \"fs\")}(\n              new URL(${imr(specifier)})\n            )\n          `);\n      buildFetchAsync = (specifier, path) =>\n        template.expression.ast`\n          ${imp(path, \"promises\", \"fs\")}\n            .readFile(new URL(${imr(specifier)}))\n            .then(${transformers.nodeFsAsync()})\n        `;\n      break;\n    case p({ web: false, node: true, toCJS: false, nodeIMR: false }):\n      buildFetchSync = (specifier, path) =>\n        transformers.nodeFsSync(template.expression.ast`\n            ${imp(path, \"readFileSync\", \"fs\")}(\n              ${imp(path, \"createRequire\", \"module\")}(import.meta.url)\n                .resolve(${specifier})\n            )\n          `);\n      buildFetchAsync = (specifier, path) =>\n        transformers.webFetch(template.expression.ast`\n            ${imp(path, \"promises\", \"fs\")}\n              .readFile(\n                ${imp(path, \"createRequire\", \"module\")}(import.meta.url)\n                  .resolve(${specifier})\n              )\n          `);\n      break;\n    default:\n      throw new Error(\"Internal Babel error: unreachable code.\");\n  }\n\n  buildFetchAsync ??= buildFetchSync;\n  const buildFetchAsyncWrapped: typeof buildFetchAsync = (expression, path) => {\n    if (t.isStringLiteral(expression)) {\n      return template.expression.ast`\n        Promise.resolve().then(() => ${buildFetchAsync(expression, path)})\n      `;\n    } else {\n      return template.expression.ast`\n        Promise.resolve(\\`\\${${expression}}\\`).then((s) => ${buildFetchAsync(\n          t.identifier(\"s\"),\n          path,\n        )})\n      `;\n    }\n  };\n\n  let buildFetch = buildFetchSync;\n  if (!buildFetchSync) {\n    if (toCommonJS) {\n      buildFetch = (specifier, path) => {\n        throw path.buildCodeFrameError(\n          \"Cannot compile to CommonJS, since it would require top-level await.\",\n        );\n      };\n    } else {\n      buildFetch = buildFetchAsync;\n    }\n  }\n\n  return {\n    buildFetch,\n    buildFetchAsync: buildFetchAsyncWrapped,\n    needsAwait: !buildFetchSync,\n  };\n}\n\nexport function buildParallelStaticImports(\n  data: Array<{ id: t.Identifier; fetch: t.Expression }>,\n  needsAwait: boolean,\n): t.VariableDeclaration | null {\n  if (data.length === 0) return null;\n\n  const declarators: t.VariableDeclarator[] = [];\n\n  if (data.length === 1) {\n    let rhs = data[0].fetch;\n    if (needsAwait) rhs = t.awaitExpression(rhs);\n    declarators.push(t.variableDeclarator(data[0].id, rhs));\n  } else if (needsAwait) {\n    const ids = data.map(({ id }) => id);\n    const fetches = data.map(({ fetch }) => fetch);\n    declarators.push(\n      t.variableDeclarator(\n        t.arrayPattern(ids),\n        t.awaitExpression(\n          template.expression.ast`\n            Promise.all(${t.arrayExpression(fetches)})\n          `,\n        ),\n      ),\n    );\n  } else {\n    for (const { id, fetch } of data) {\n      declarators.push(t.variableDeclarator(id, fetch));\n    }\n  }\n\n  return t.variableDeclaration(\"const\", declarators);\n}\n"],"mappings":"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","ignoreList":[]}